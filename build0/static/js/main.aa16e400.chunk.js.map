{"version":3,"sources":["utils/index.js","contexts/Web3Context.js","images/logo.png","components/NavigationBar.js","components/Switch.js","components/Home.js","components/App.js","index.js","config/index.js"],"names":["ellipsizeAddress","address","width","slice","isMobile","mobile","getContracts","config","chainId","web3Provider","contracts","networkNotSupported","connectedNetwork","supportedId","addresses","contractName","ethers","Contract","abi","e","console","log","message","web3SetUp","Web3Context","React","createContext","Web3ContextProvider","children","useState","provider","signer","connectedWallet","networkDetails","setNetworkDetails","setWallet","eth","connectedWith","a","providers","Web3Provider","getSigner","getNetwork","getAddress","ls","set","connect","WalletConnectProvider","infuraId","qrcodeModalOptions","mobileLinks","enable","request","method","on","accounts","window","reload","code","reason","ethereum","location","TetherMock","balanceOf","USDCoinMock","usdt","usdc","tokenType","amount","allowance","ByteCity","gte","useEffect","Provider","value","web3NetworkDetails","web3Connect","web3IsConnected","balances","isApproved","useStyles","makeStyles","paper","background","NavigationBar","useContext","AppBar","position","color","elevation","sx","borderBottom","theme","palette","divider","Toolbar","flexWrap","Typography","variant","noWrap","flexGrow","src","Logo","alt","style","height","marginTop","marginLeft","Button","onClick","my","mx","isTestnet","params","Number","toString","Switch","props","Object","assign","cursor","switchTo","Home","setValue","setMessage","myBalances","setMyBalances","setAmount","className","fontSize","Container","maxWidth","component","Grid","container","spacing","alignItems","item","xs","sm","md","class","parseFloat","substring","length","formatTether","utils","formatEther","FormControl","RadioGroup","name","row","onChange","event","target","FormControlLabel","control","Radio","label","OutlinedInput","id","type","ev","replace","endAdornment","InputAdornment","App","createTheme","mode","typography","fontFamily","getWidth","innerWidth","test","origin","protocol","host","pathname","setWindowWidth","addEventListener","removeEventListener","ThemeProvider","GlobalStyles","styles","ul","margin","padding","listStyle","CssBaseline","exact","path","element","ReactDOM","render","StrictMode","document","getElementById","isDev","require","c","x","keys","split","process","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","module","exports"],"mappings":"mpYAUA,SAASA,EAAiBC,GAAqB,IAAZC,EAAW,uDAAH,EACzC,MAAM,GAAN,OAAUD,EAAQE,MAAM,EAAGD,EAAQ,GAAnC,cAA2CD,EAAQE,OAAOD,IA2D5D,SAASE,IACP,OAAOC,W,oBC9DT,SAASC,EAAaC,EAAQC,EAASC,GACrC,IAAIC,EAAY,GACZC,GAAsB,EACtBC,EAAmB,KACvB,GAAIL,EAAOM,YAAYL,GAAU,CAC/B,IAAIM,EAAYP,EAAOG,UAAUF,GAEjC,IAAK,IAAIO,KADTH,EAAmBL,EAAOM,YAAYL,GACbM,EACvB,IACEJ,EAAUK,GAAgB,IAAIC,IAAOC,SACnCH,EAAUC,GACVR,EAAOW,IAAIH,GACXN,GAEF,MAAOU,GACPC,QAAQC,IAAI,QAASF,EAAEG,eAI3BX,GAAsB,EAExB,MAAO,CACLD,YACAE,mBACAD,uBAIG,IAEHY,EAFSC,EAAcC,IAAMC,gBAuIlBC,MAnIf,YAAoD,IAArBpB,EAAoB,EAApBA,OAAQqB,EAAY,EAAZA,SACrC,EAA4CH,IAAMI,SAAS,CACzDC,SAAU,GACVC,OAAQ,GACRC,gBAAiB,GACjBxB,QAAS,GACTE,UAAW,GACXE,iBAAkB,GAClBD,oBAAqB,KAPvB,mBAAOsB,EAAP,KAAuBC,EAAvB,KADiD,SAWlCC,EAXkC,gFAWjD,WAAyBC,EAAKC,GAA9B,6BAAAC,EAAA,sEAEUR,EAAW,IAAId,IAAOuB,UAAUC,aAAaJ,GAC7CL,EAASD,EAASW,YAH5B,SAI2BX,EAASY,aAJpC,cAIUlC,EAJV,OAIkDA,QAJlD,SAKkCuB,EAAOY,aALzC,OAKUX,EALV,SAMiE1B,EAC3DC,EACAC,EACAsB,GAHMpB,EANZ,EAMYA,UAAWE,EANvB,EAMuBA,iBAAkBD,EANzC,EAMyCA,oBAKrCuB,EAAkB,CAChBJ,WACAC,SACAC,kBACAxB,UACAE,YACAE,mBACAD,wBAGFiC,IAAGC,IAAI,gBAAiBR,GArB5B,kDAuBIjB,QAAQC,IAAR,MAvBJ,2DAXiD,+BAuClCyB,IAvCkC,2EAuCjD,8BAAAR,EAAA,yDAEMF,EAAM,MACNhC,IAHN,wBAIIgC,EAAM,IAAIW,IAAsB,CAC9BC,SAAU,mCACVC,mBAAoB,CAClBC,YAAa,CAAC,eAPtB,SAUUd,EAAIe,SAVd,cAWIhB,EAAUC,EAAK,YAXnB,SAacA,EAAIgB,QAAQ,CAAEC,OAAQ,wBAbpC,mCAcMjB,EAAIkB,GAAG,mBAAmB,SAACC,GACzBC,OAAOC,YAETrB,EAAIkB,GAAG,gBAAgB,SAAC9C,GACtBgD,OAAOC,YAETrB,EAAIkB,GAAG,cAAc,SAACI,EAAMC,GAC1BH,OAAOC,YAETtB,EAAUC,EAAK,YAvBrB,mCAyBwC,qBAApBoB,OAAOI,SAzB3B,wBA0BQxB,EAAMoB,OAAOI,SA1BrB,UA2BcxB,EAAIgB,QAAQ,CAAEC,OAAQ,wBA3BpC,oCA4BMjB,EAAIkB,GAAG,mBAAmB,kBAAME,OAAOK,SAASJ,YAChDrB,EAAIkB,GAAG,gBAAgB,kBAAME,OAAOK,SAASJ,YAC7CrB,EAAIkB,GAAG,cAAc,kBAAME,OAAOK,SAASJ,YAC3CtB,EAAUC,EAAK,YA/BrB,6CAvCiD,kEAyFjD,8BAAAE,EAAA,6DACS5B,EAA8BuB,EAA9BvB,UAAWsB,EAAmBC,EAAnBD,gBADpB,SAGgBtB,EAAUoD,WAAWC,UAAU/B,GAH/C,mCAIgBtB,EAAUsD,YAAYD,UAAU/B,GAJhD,6CAGIiC,KAHJ,KAIIC,KAJJ,mDAzFiD,kEAiGjD,WAA0BC,EAAWC,GAArC,mBAAA9B,EAAA,6DACS5B,EAA8BuB,EAA9BvB,UAAWsB,EAAmBC,EAAnBD,gBAElBZ,QAAQC,IAAIX,EAAwB,IAAdyD,EAClB,aAAe,gBAJrB,SAM0BzD,EAAwB,IAAdyD,EAC9B,aAAe,eAAeE,UAAUrC,EAAiBtB,EAAU4D,SAASrE,SAPlF,cAMQoE,EANR,yBAQSA,EAAUE,IAAIH,IARvB,4CAjGiD,sBAoHjD,OAvCA3C,IAAM+C,WAAU,WAEd,sBAAC,sBAAAlC,EAAA,yDAGuB,cAFAM,IAAG,kBAAoB,KAERrB,EAHtC,uBAIGA,GAAY,EAJf,SAKSuB,IALT,0CAAD,MAsCA,cAACtB,EAAYiD,SAAb,CACEC,MAAO,CACLC,mBAAoB1C,EACpB2C,YAAa9B,EACb+B,gBA9Cc,mBAAQ5C,EAAeD,iBA+CrC8C,SA1H2C,2CA2H3CC,WA3H2C,+CAqH/C,SASGnD,K,6CCvKQ,MAA0B,iCCqCnCoD,EAAYC,YAAW,CAC3BC,MAAO,CACLC,WAAY,WA8DDC,MApCf,WACkBJ,IAAhB,IACA,EAA4CK,qBAAW7D,GAA/CoD,EAAR,EAAQA,YAAaD,EAArB,EAAqBA,mBACrB,EAAoC9C,oBAAS,GAA7C,mBACA,OADA,UAEE,cAACyD,EAAA,EAAD,CACEC,SAAS,QACTC,MAAM,UACNC,UAAW,EACXC,GAAI,CAAEC,aAAc,SAACC,GAAD,0BAAwBA,EAAMC,QAAQC,WAJ5D,SAME,eAACC,EAAA,EAAD,CAASL,GAAI,CAAEM,SAAU,QAAzB,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKV,MAAM,UAAUW,QAAM,EAACT,GAAI,CAAEU,SAAU,GAAhE,SACE,qBAAKC,IAAKC,EAAMC,IAAK,OAAQC,MAAO,CAAEC,OAAQ,GAAIC,UAAW,OAE/D,wBACA,8BACG/B,EAAmB3C,gBAClB,qBAAKwE,MAAO,CAAEG,WAAY,IAA1B,SACG3G,EAAiB2E,EAAmB3C,mBAGvC,cAAC4E,EAAA,EAAD,CACEC,QAASjC,EACTsB,QAAQ,WACRR,GAAI,CAAEoB,GAAI,EAAGC,GAAI,KAHnB,oC,kGCrFZ,sBAAAzE,EAAA,0DACM0E,YADN,gCAEUxD,OAAOI,SAASR,QAAQ,CAC5BC,OAAQ,6BACR4D,OAAQ,CAAC,CAAEzG,QAAS,KAAO0G,OAAO,OAAOC,SAAS,QAJxD,6CAOU3D,OAAOI,SAASR,QAAQ,CAC5BC,OAAQ,6BACR4D,OAAQ,CAAC,CAAEzG,QAAS,KAAO0G,OAAO,IAAIC,SAAS,QATrD,4C,sBA0BeC,MAZf,SAAgBC,GAEd,IAAMb,EAAQc,OAAOC,OAAOF,EAAMb,OAAS,GAAI,CAC7CgB,OAAQ,UACRhC,MAAO,SAET,OACE,sBAAMgB,MAAOA,EAAOK,QAAS,kB,0CAAMY,IAAnC,gD,kBCiIWC,MA/Gf,WACE,MAAmDjG,IAAM4D,WAAW7D,GAA9DmD,EAAN,EAAMA,mBAAoBG,EAA1B,EAA0BA,SAAUC,EAApC,EAAoCA,WACpC,EACEJ,GAAsB,GADhBhE,EAAR,EAAQA,oBAGR,GAHA,EAA6BC,iBAA7B,EAA+CoB,gBAA/C,EAAgEtB,UAGtCe,IAAMI,SAAS,SAAzC,mBAAO6C,EAAP,KAAciD,EAAd,KACA,EAA8BlG,IAAMI,SAAS,IAA7C,mBAAOP,EAAP,KAAgBsG,EAAhB,KAMA,EAAoCnG,IAAMI,UAAS,GAAnD,mBAAOgG,EAAP,KAAmBC,EAAnB,KACA,EAA4BrG,IAAMI,SAAS,KAA3C,mBAAOuC,EAAP,KAAe2D,EAAf,KAEAtG,IAAM+C,WAAU,WACd,sBAAC,sBAAAlC,EAAA,yDACMuF,EADN,4BAEGC,EAFH,SAEuBhD,IAFvB,4EAAD,KAKC,CAACA,EAAU+C,IAEd,IAaMhB,EAAO,uCAAG,sBAAAvE,EAAA,sEACFyC,EAAsB,SAAVL,EAAmB,EAAI,EAAGN,GADpC,iCAEZwD,EAAW,4CAFC,2CAAH,qDAYb,OAAIjH,EAEA,mCACE,qBAAKqH,UAAW,gBAAhB,SACE,cAAC,EAAD,CAAQxB,MAAO,CAAEyB,SAAU,gBAM/B,cAACC,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAU,OAAOJ,UAAW,YAArD,SACE,eAACK,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,WAAvC,UACGlH,EAAU,cAAC+G,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAA/B,SACL,qBAAKC,MAAO,WAAZ,SAAyBvH,MACjB,KACd,cAAC+G,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGZ,UAAW,OAA7C,SACE,sBAAKA,UAAW,UAAhB,UACZ,6CACc,gCACE,8CAA+B,IAAfH,EAAuBiB,WAxBrD,SAAsB1E,GAEpB,OADAA,EAASA,EAAO+C,YACF4B,UAAU,EAAG3E,EAAO4E,OAAS,GAAK,IAAM5E,EAAOjE,OAAO,GAsBN8I,CAAapB,EAAW5D,KAAKkD,aAAe,EAAE,uBAAhG,cAC4B,IAAfU,EAAuBiB,WAAW9H,IAAOkI,MAAMC,YAAYtB,EAAW3D,KAAKiD,aAAe,KACvG,oDACA,cAACiC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CACI,kBAAgB,sCAChBC,KAAK,iCACL5E,MAAOA,EACP6E,KAAG,EACHC,SApEC,SAACC,GACpB9B,EAAS8B,EAAMC,OAAOhF,QA8DR,UAOE,cAACiF,EAAA,EAAD,CAAkBjF,MAAM,OAAOkF,QAAS,cAACC,EAAA,EAAD,IAAWC,MAAM,eACzD,cAACH,EAAA,EAAD,CAAkBjF,MAAM,OAAOkF,QAAS,cAACC,EAAA,EAAD,IAAWC,MAAM,kBAG7D,cAACC,EAAA,EAAD,CACIC,GAAG,gBACHC,KAAK,SACLvF,MAAON,EACPoF,SA/DD,SAACU,GAChB9I,QAAQC,IAAI,KACZ,IAAIqD,EAAQwF,EAAGR,OAAOhF,MACtBtD,QAAQC,IAAIqD,GAIVA,EAHGA,EAGKA,EAAMyF,QAAQ,aAAc,MAF5B,IAIVpC,EAAUrD,IAuDMgB,GAAI,CAAExF,MAAO,QACbkK,aACE,cAACC,EAAA,EAAD,CAAgB9E,SAAS,MAAzB,SACE,cAACqB,EAAA,EAAD,CAAQC,QAASA,EAASmB,UAAW,cAArC,sCASd,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGZ,UAAW,OAA7C,SACE,qBAAKA,UAAW,cAElB,cAACK,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGZ,UAAW,OAA7C,SACE,qBAAKA,UAAW,oBC/EbsC,MAlDf,WACE,IAAM1E,EAAQ2E,YAAY,CACxB1E,QAAS,CACP2E,KAAM,QAERC,WAAY,CACVC,WAAY,YAIR7G,EAAaL,OAAbK,SAOR,SAAS8G,IACP,OAAOnH,OAAOoH,WAPX,QAAQC,KAAKhH,EAASiH,SACQ,UAA7BtH,OAAOK,SAASkH,WAClBvH,OAAOK,SAAW,WAAaA,EAASmH,KAAOnH,EAASoH,UAS5D,MAAsCxJ,IAAMI,SAAS8I,KAArD,mBAAoBO,GAApB,WAUA,OARAzJ,IAAM+C,WAAU,WACd,OAAO,WAEL,OADAhB,OAAO2H,iBAAiB,UAAU,kBAAMD,EAAeP,QAChD,kBACLnH,OAAO4H,oBAAoB,UAAU,kBAAMF,EAAeP,YAE7D,IAGD,cAAC,EAAD,CAAqBpK,OAAQA,IAA7B,SACE,cAAC,IAAD,UACE,eAAC8K,EAAA,EAAD,CAAezF,MAAOA,EAAtB,UACE,cAAC0F,EAAA,EAAD,CACEC,OAAQ,CAAEC,GAAI,CAAEC,OAAQ,EAAGC,QAAS,EAAGC,UAAW,WAEpD,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,gBCpD3CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,oBCT1B,gBAeIC,EACArF,EAhBEtG,EAAY4G,OAAOC,OAAO+E,EAAQ,MAElCpL,EAAMoG,OAAOC,OAAO+E,EAAQ,KAAe5L,WAEjD,IAAK,IAAI6L,KAAK7L,EACZ,IAAK,IAAI8L,KAAK9L,EAAU6L,GACtB,GAAI,KAAK1B,KAAK2B,GAAI,CAChB,IAAIC,EAAOD,EAAEE,MAAM,KACnBhM,EAAU6L,GAAGE,EAAK,IAAM/L,EAAU6L,GAAGC,GACrCtL,EAAIuL,EAAK,IAAMvL,EAAIuL,EAAK,WACjB/L,EAAU6L,GAAGC,GAOJ,qBAAXhJ,QACT6I,EAAQ,UAAUxB,KAAKrH,OAAOK,SAASiH,QACvC9D,EAAY,UAAU6D,KAAKrH,OAAOK,SAASiH,SAChC6B,IACXN,EAAQrF,GAAY,GAGtB,IAAMzG,EAAS,CACbM,YAAa,CACX,MAAO,CACLL,QAAS,KAAO0G,OAAO,OAAOC,SAAS,IACvCyF,UAAW,OACXC,eAAgB,CACdvD,KAAM,OACNwD,OAAQ,OACRC,SAAU,IAEZC,QAAS,CAAC,8CACVC,kBAAmB,CAAC,8CAEtB,KAAM,CACJzM,QAAS,KAAO0G,OAAO,MAAMC,SAAS,IACtCyF,UAAW,iBACXC,eAAgB,CACdvD,KAAM,MACNwD,OAAQ,MACRC,SAAU,IAEZC,QAAS,CAAC,yBACVC,kBAAmB,KAGvBvM,YACAQ,MACA8F,YACAqF,SAGFa,EAAOC,QAAU5M,I","file":"static/js/main.aa16e400.chunk.js","sourcesContent":["// import { ethers } from \"ethers\";\n\nimport { ethers } from \"ethers\";\nimport config from \"../config\";\nimport { isMobile as mobile } from \"react-device-detect\";\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n\nfunction ellipsizeAddress(address, width = 4) {\n  return `${address.slice(0, width + 2)}...${address.slice(-width)}`;\n}\n\nfunction addSomeDecimals(s, c = 2) {\n  s = s.toString().split(\".\");\n  s[1] = (s[1] || \"\").substring(0, c);\n  s[1] = s[1] + \"0\".repeat(c - s[1].length);\n  return s.join(\".\");\n}\n\nfunction localeFormat(num) {\n  if (num === \"\") {\n    return \"\";\n  }\n  if (typeof num === \"string\") {\n    num = parseFloat(num);\n  }\n  return num.toLocaleString(getLang());\n}\n\nfunction getLang() {\n  return navigator.language || navigator.languages[0] || \"en-us\";\n}\n\nasync function sleep(millis) {\n  // eslint-disable-next-line no-undef\n  return new Promise((resolve) => setTimeout(resolve, millis));\n}\n\n// check if it is on mainnet before adding it\nasync function addTokenToWallet(chainId) {\n  const contracts = config.contracts[chainId];\n  if (contracts) {\n    let address, symbol, image;\n    const decimals = 18;\n    address = contracts.SynrMock;\n    symbol = \"SYNR\";\n    image = \"https://data.syn.city/assets/SynCityLogo97x97Black.png\";\n    if (typeof window.ethereum !== \"undefined\") {\n      try {\n        return window.ethereum.request({\n          method: \"wallet_watchAsset\",\n          params: {\n            type: \"ERC20\", // Initially only supports ERC20, but eventually more!\n            options: {\n              address,\n              symbol,\n              decimals,\n              image,\n            },\n          },\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n}\n\nfunction isMobile() {\n  return mobile;\n}\n\nfunction parseAnd2Decimals(amount, noDecimals, justString) {\n  if (!amount || amount.toString() === \"0\") {\n    return noDecimals ? 0 : \"0.00\";\n  }\n  if (/\\./.test(amount.toString())) {\n    return amount;\n  }\n  let str = ethers.utils.formatEther(amount.toString());\n  if (justString) {\n    return str;\n  }\n  let res = parseFloat(str).toLocaleString(\"us-en\");\n  if (noDecimals) {\n    return res.split(\".\")[0];\n  }\n  if (/\\./.test(res)) {\n    res = res.substring(0, res.length - 1);\n  }\n  return res;\n}\n\nfunction add2Decimals(amount) {\n  if (!amount || amount === \"0\") {\n    return \"0.00\";\n  }\n  let res = parseFloat(amount).toLocaleString(\"us-en\").split(\".\");\n  res[1] = res[1] || \"\";\n  if (res[1].length >= 2) {\n    res[1] = res[1].substring(0, 2);\n  } else {\n    res[1] = res[1] + \"0\".repeat(2 - res[1].length);\n  }\n  return res.join(\".\");\n}\n\nexport {\n  capitalize,\n  ellipsizeAddress,\n  addSomeDecimals,\n  localeFormat,\n  getLang,\n  sleep,\n  isMobile,\n  parseAnd2Decimals,\n  add2Decimals,\n  addTokenToWallet,\n};\n","import React from \"react\";\n\nimport ls from \"local-storage\";\nimport { ethers } from \"ethers\";\n\n// import { isTestnet } from \"../config\";\nimport { isMobile } from \"../utils\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nfunction getContracts(config, chainId, web3Provider) {\n  let contracts = {};\n  let networkNotSupported = false;\n  let connectedNetwork = null;\n  if (config.supportedId[chainId]) {\n    let addresses = config.contracts[chainId];\n    connectedNetwork = config.supportedId[chainId];\n    for (let contractName in addresses) {\n      try {\n        contracts[contractName] = new ethers.Contract(\n          addresses[contractName],\n          config.abi[contractName],\n          web3Provider\n        );\n      } catch (e) {\n        console.log(\"error\", e.message);\n      }\n    }\n  } else {\n    networkNotSupported = true;\n  }\n  return {\n    contracts,\n    connectedNetwork,\n    networkNotSupported,\n  };\n}\n\nexport const Web3Context = React.createContext();\n\nlet web3SetUp;\n\nfunction Web3ContextProvider({ config, children }) {\n  const [networkDetails, setNetworkDetails] = React.useState({\n    provider: \"\",\n    signer: \"\",\n    connectedWallet: \"\",\n    chainId: \"\",\n    contracts: \"\",\n    connectedNetwork: \"\",\n    networkNotSupported: \"\",\n  });\n\n  async function setWallet(eth, connectedWith) {\n    try {\n      const provider = new ethers.providers.Web3Provider(eth);\n      const signer = provider.getSigner();\n      const chainId = (await provider.getNetwork()).chainId;\n      const connectedWallet = await signer.getAddress();\n      const { contracts, connectedNetwork, networkNotSupported } = getContracts(\n        config,\n        chainId,\n        provider\n      );\n      setNetworkDetails({\n        provider,\n        signer,\n        connectedWallet,\n        chainId,\n        contracts,\n        connectedNetwork,\n        networkNotSupported,\n      });\n\n      ls.set(\"connectedWith\", connectedWith);\n    } catch (e) {\n      console.log(e);\n      // window.location.reload();\n    }\n  }\n\n  async function connect() {\n    // console.log(\"connecting\");\n    let eth = null;\n    if (isMobile()) {\n      eth = new WalletConnectProvider({\n        infuraId: \"a5d8ae5cf48e49269d71a5cf25289c0d\",\n        qrcodeModalOptions: {\n          mobileLinks: [\"metamask\"],\n        },\n      });\n      await eth.enable();\n      setWallet(eth, \"metamask\");\n\n      if (await eth.request({ method: \"eth_requestAccounts\" })) {\n        eth.on(\"accountsChanged\", (accounts) => {\n          window.reload();\n        });\n        eth.on(\"chainChanged\", (chainId) => {\n          window.reload();\n        });\n        eth.on(\"disconnect\", (code, reason) => {\n          window.reload();\n        });\n        setWallet(eth, \"metamask\");\n      }\n    } else if (typeof window.ethereum !== \"undefined\") {\n      let eth = window.ethereum;\n      if (await eth.request({ method: \"eth_requestAccounts\" })) {\n        eth.on(\"accountsChanged\", () => window.location.reload());\n        eth.on(\"chainChanged\", () => window.location.reload());\n        eth.on(\"disconnect\", () => window.location.reload());\n        setWallet(eth, \"metamask\");\n      }\n    }\n  }\n\n  const isConnected = () => !!networkDetails.connectedWallet;\n\n  React.useEffect(() => {\n    // useEffect is synchronous\n    (async () => {\n      const connectedWith = ls(\"connectedWith\") || \"\";\n      // we use web3Setup to avoid executing this function again and again\n      if (connectedWith === \"metamask\" && !web3SetUp) {\n        web3SetUp = true;\n        await connect();\n      }\n    })();\n  });\n\n  async function balances() {\n    const {contracts, connectedWallet} = networkDetails\n    return {\n      usdt: await contracts.TetherMock.balanceOf(connectedWallet),\n      usdc: await contracts.USDCoinMock.balanceOf(connectedWallet)\n    }\n  }\n\n  async function isApproved(tokenType, amount) {\n    const {contracts, connectedWallet} = networkDetails\n\n    console.log(contracts[tokenType === 1 ?\n        \"TetherMock\" : \"USDCoinMock\"])\n\n    const allowance = await contracts[tokenType === 1 ?\n        \"TetherMock\" : \"USDCoinMock\"].allowance(connectedWallet, contracts.ByteCity.address);\n    return allowance.gte(amount);\n  }\n\n  async function myDeposits() {\n\n  }\n\n  async function newDeposit() {\n\n  }\n\n  return (\n    <Web3Context.Provider\n      value={{\n        web3NetworkDetails: networkDetails,\n        web3Connect: connect,\n        web3IsConnected: isConnected,\n        balances: balances,\n        isApproved: isApproved\n      }}\n    >\n      {children}\n    </Web3Context.Provider>\n  );\n}\n\nexport default Web3ContextProvider;\n","export default __webpack_public_path__ + \"static/media/logo.44c8f980.png\";","import React, { useContext, useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport Button from \"@mui/material/Button\";\nimport {\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\nimport Logo from \"../images/logo.png\";\n\nimport { Web3Context } from \"../contexts/Web3Context\";\nimport {\n  addTokenToWallet,\n  capitalize,\n  ellipsizeAddress,\n  isMobile,\n} from \"../utils\";\n\nconst menuItems = [\n  { title: \"All NFTS\", link: \"/\" },\n  { title: \"Your NFTS\", link: \"/yournfts\" },\n];\n\n// const siteName = \"Syn City Staking\";\n\n/**\n * Site-wide navigation bar\n */\n\nconst useStyles = makeStyles({\n  paper: {\n    background: \"black\",\n  },\n});\n\nconst styles = {\n  link: {\n    backgroundColor: \"#000000\",\n    color: \"yellow\",\n    borderRadius: 6,\n    border: \"1px solid #440\",\n    padding: \"3px 8px\",\n    textDecoration: \"none\",\n    fontSize: \"96%\",\n  },\n  RouterLink: {\n    color: \"yellow\",\n    fontSize: \"20px\",\n  },\n  icon: {\n    color: \"yellow\",\n  },\n  drawer: {\n    backgroundColor: \"black\",\n  },\n};\n\nfunction NavigationBar() {\n  const classes = useStyles();\n  const { web3Connect, web3NetworkDetails } = useContext(Web3Context);\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <AppBar\n      position=\"fixed\"\n      color=\"default\"\n      elevation={0}\n      sx={{ borderBottom: (theme) => `1px solid ${theme.palette.divider}` }}\n    >\n      <Toolbar sx={{ flexWrap: \"wrap\" }}>\n        <Typography variant=\"h6\" color=\"inherit\" noWrap sx={{ flexGrow: 1 }}>\n          <img src={Logo} alt={\"logo\"} style={{ height: 40, marginTop: 8 }} />\n        </Typography>\n        <nav></nav>\n        <div>\n          {web3NetworkDetails.connectedWallet ? (\n            <div style={{ marginLeft: 24 }}>\n              {ellipsizeAddress(web3NetworkDetails.connectedWallet)}\n            </div>\n          ) : (\n            <Button\n              onClick={web3Connect}\n              variant=\"outlined\"\n              sx={{ my: 1, mx: 1.5 }}\n            >\n              Connect Wallet\n            </Button>\n          )}\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default NavigationBar;\n","import { isTestnet } from \"../config\";\n\nasync function switchTo() {\n  if (isTestnet) {\n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: \"0x\" + Number(43113).toString(16) }],\n    });\n  } else {\n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: \"0x\" + Number(56).toString(16) }],\n    });\n  }\n}\n\nfunction Switch(props) {\n  // const { web3NetworkDetails } = useContext(Web3Context);\n  const style = Object.assign(props.style || {}, {\n    cursor: \"pointer\",\n    color: \"gold\",\n  });\n  return (\n    <span style={style} onClick={() => switchTo()}>\n      Click here to switch to BNB chain\n    </span>\n  );\n}\nexport default Switch;\n","import React from \"react\";\nimport {\n  Table,\n  TableCell,\n  TableRow,\n  TableContainer,\n  TableHead,\n  Typography,\n  Button,\n  OutlinedInput,\n  FormHelperText,\n  InputAdornment,\n\n} from \"@mui/material\";\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\n\n\nimport Paper from \"@mui/material/Paper\";\nimport Switch from \"./Switch\";\nimport { isMobile } from \"../utils\";\nimport { Web3Context } from \"../contexts/Web3Context\";\nimport config from \"../config\";\n\nimport { ethers } from \"ethers\";\nimport { Container, Grid } from \"@mui/material\";\n\nfunction BN(integer = \"0\") {\n  return ethers.BigNumber.from(integer.toString());\n}\n\n\nasync function sleep(millis) {\n  // eslint-disable-next-line no-undef\n  return new Promise((resolve) => setTimeout(resolve, millis));\n}\n\nfunction Home() {\n  let { web3NetworkDetails, balances, isApproved } = React.useContext(Web3Context);\n  const { networkNotSupported, connectedNetwork, connectedWallet, contracts } =\n    web3NetworkDetails || {};\n\n  const [value, setValue] = React.useState('usdt');\n  const [message, setMessage] = React.useState('');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  const [myBalances, setMyBalances] = React.useState(false);\n  const [amount, setAmount] = React.useState(\"0\");\n\n  React.useEffect(() => {\n    (async () => {\n      if (!myBalances) {\n        setMyBalances(await balances())\n      }\n    })();\n  }, [balances, myBalances]);\n\n  const onChange = (ev) => {\n    console.log(999)\n    let value = ev.target.value;\n    console.log(value)\n    if (!value) {\n      value = \"0\";\n    } else {\n      value = value.replace(/^0+([1-9])/, \"$1\");\n    }\n    setAmount(value);\n\n  };\n\n  const onClick = async () => {\n    if (!(await isApproved( value === \"usdt\" ? 1 : 2, amount))) {\n      setMessage(\"To deposit you must approve the spend...\")\n    }\n\n  };\n\n  function formatTether(amount) {\n    amount = amount.toString()\n    return amount.substring(0, amount.length - 6) + \".\" + amount.slice(-6)\n  }\n\n  if (networkNotSupported) {\n    return (\n      <>\n        <div className={\"centeredError\"}>\n          <Switch style={{ fontSize: \"1.6rem\" }} />\n        </div>\n      </>\n    );\n  } else {\n    return (\n      <Container maxWidth=\"lg\" component=\"main\" className={'container'}>\n        <Grid container spacing={0} alignItems=\"flex-end\">\n          {message ? <Grid item xs={12} sm={12} md={12}>\n                <div class={'centered'}>{message}</div>\n              </Grid> : null}\n          <Grid item xs={12} sm={12} md={4} className={'tile'}>\n            <div className={'tileBox'}>\n<h3>MY BALANCES</h3>\n              <div>\n                <p>Tether USD: {myBalances !== false ? parseFloat(formatTether(myBalances.usdt.toString()) ): 0}<br/>\n                  USD Coin: {myBalances !== false ? parseFloat(ethers.utils.formatEther(myBalances.usdc.toString())) : 0}</p>\n                <h4>Make a new deposit</h4>\n                <FormControl>\n                  <RadioGroup\n                      aria-labelledby=\"demo-controlled-radio-buttons-group\"\n                      name=\"controlled-radio-buttons-group\"\n                      value={value}\n                      row\n                      onChange={handleChange}\n                  >\n                    <FormControlLabel value=\"usdt\" control={<Radio />} label=\"Tether USD\" />\n                    <FormControlLabel value=\"usdc\" control={<Radio />} label=\"USD Coin\" />\n                  </RadioGroup>\n                </FormControl>\n                <OutlinedInput\n                    id=\"staked-amount\"\n                    type=\"number\"\n                    value={amount}\n                    onChange={onChange}\n                    sx={{ width: \"100%\" }}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <Button onClick={onClick} className={'smallButton'}>\n                          Make deposit\n                        </Button>\n                      </InputAdornment>\n                    }\n                />\n              </div>\n            </div>\n          </Grid>\n          <Grid item xs={12} sm={12} md={4} className={'tile'}>\n            <div className={'tileBox'}></div>\n          </Grid>\n          <Grid item xs={12} sm={12} md={4} className={'tile'}>\n            <div className={'tileBox'}></div>\n          </Grid>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default Home;\n","// React\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\n// MUI\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport GlobalStyles from \"@mui/material/GlobalStyles\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\n\n// internal imports\nimport Web3ContextProvider from \"../contexts/Web3Context\";\nimport NavigationBar from \"./NavigationBar\";\nimport config from \"../config\";\nimport Home from \"./Home\";\n\nfunction App() {\n  const theme = createTheme({\n    palette: {\n      mode: \"dark\",\n    },\n    typography: {\n      fontFamily: \"Modeco\",\n    },\n  });\n\n  const { location } = window;\n  if (!/local/.test(location.origin)) {\n    if (window.location.protocol === \"http:\") {\n      window.location = \"https://\" + location.host + location.pathname;\n    }\n  }\n\n  function getWidth() {\n    return window.innerWidth;\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  const [windowWidth, setWindowWidth] = React.useState(getWidth());\n\n  React.useEffect(() => {\n    return () => {\n      window.addEventListener(\"resize\", () => setWindowWidth(getWidth()));\n      return () =>\n        window.removeEventListener(\"resize\", () => setWindowWidth(getWidth()));\n    };\n  }, []);\n\n  return (\n    <Web3ContextProvider config={config}>\n      <BrowserRouter>\n        <ThemeProvider theme={theme}>\n          <GlobalStyles\n            styles={{ ul: { margin: 0, padding: 0, listStyle: \"none\" } }}\n          />\n          <CssBaseline />\n          <NavigationBar />\n          <Routes>\n            <Route exact path=\"/\" element={<Home />} />\n          </Routes>\n        </ThemeProvider>\n      </BrowserRouter>\n    </Web3ContextProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","const contracts = Object.assign(require(\"./deployed.json\"));\n\nconst abi = Object.assign(require(\"./ABIs.json\").contracts);\n\nfor (let c in contracts) {\n  for (let x in contracts[c]) {\n    if (/\\|/.test(x)) {\n      let keys = x.split(\"|\");\n      contracts[c][keys[0]] = contracts[c][x];\n      abi[keys[0]] = abi[keys[1]];\n      delete contracts[c][x];\n    }\n  }\n}\n\nlet isDev;\nlet isTestnet;\nif (typeof window !== \"undefined\") {\n  isDev = /(stage)/.test(window.location.origin);\n  isTestnet = /(local)/.test(window.location.origin);\n} else if (!!process) {\n  isDev = isTestnet = true;\n}\n\nconst config = {\n  supportedId: {\n    43113: {\n      chainId: \"0x\" + Number(43113).toString(16),\n      chainName: \"Fuji\",\n      nativeCurrency: {\n        name: \"AVAX\",\n        symbol: \"AVAX\",\n        decimals: 18,\n      },\n      rpcUrls: [\"https://api.avax-test.network/ext/bc/C/rpc\"],\n      blockExplorerUrls: [\"https://cchain.explorer.avax-test.network\"],\n    },\n    1337: {\n      chainId: \"0x\" + Number(1337).toString(16),\n      chainName: \"Localhost 8545\",\n      nativeCurrency: {\n        name: \"ETH\",\n        symbol: \"ETH\",\n        decimals: 18,\n      },\n      rpcUrls: [\"http://localhost:8545\"],\n      blockExplorerUrls: [],\n    },\n  },\n  contracts,\n  abi,\n  isTestnet,\n  isDev,\n};\n\nmodule.exports = config;\n"],"sourceRoot":""}